//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WebApplication5.Quotations {
    using System.Data;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="Quotations.QuotationSoap")]
    public interface QuotationSoap {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/AddQuotation", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        bool AddQuotation(int quotationId, string sName, string address, string email, string pName, int stock, string requested_Date, string response_Date);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/AddQuotation", ReplyAction="*")]
        System.Threading.Tasks.Task<bool> AddQuotationAsync(int quotationId, string sName, string address, string email, string pName, int stock, string requested_Date, string response_Date);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ViewAllQuotations", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataTable ViewAllQuotations();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ViewAllQuotations", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataTable> ViewAllQuotationsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/UpdateQuotation", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        bool UpdateQuotation(int quotationId, string sName, string address, string email, string PName, int stock, string requested_Date, string response_Date);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/UpdateQuotation", ReplyAction="*")]
        System.Threading.Tasks.Task<bool> UpdateQuotationAsync(int quotationId, string sName, string address, string email, string PName, int stock, string requested_Date, string response_Date);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface QuotationSoapChannel : WebApplication5.Quotations.QuotationSoap, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class QuotationSoapClient : System.ServiceModel.ClientBase<WebApplication5.Quotations.QuotationSoap>, WebApplication5.Quotations.QuotationSoap {
        
        public QuotationSoapClient() {
        }
        
        public QuotationSoapClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public QuotationSoapClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public QuotationSoapClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public QuotationSoapClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public bool AddQuotation(int quotationId, string sName, string address, string email, string pName, int stock, string requested_Date, string response_Date) {
            return base.Channel.AddQuotation(quotationId, sName, address, email, pName, stock, requested_Date, response_Date);
        }
        
        public System.Threading.Tasks.Task<bool> AddQuotationAsync(int quotationId, string sName, string address, string email, string pName, int stock, string requested_Date, string response_Date) {
            return base.Channel.AddQuotationAsync(quotationId, sName, address, email, pName, stock, requested_Date, response_Date);
        }
        
        public System.Data.DataTable ViewAllQuotations() {
            return base.Channel.ViewAllQuotations();
        }
        
        public System.Threading.Tasks.Task<System.Data.DataTable> ViewAllQuotationsAsync() {
            return base.Channel.ViewAllQuotationsAsync();
        }
        
        public bool UpdateQuotation(int quotationId, string sName, string address, string email, string PName, int stock, string requested_Date, string response_Date) {
            return base.Channel.UpdateQuotation(quotationId, sName, address, email, PName, stock, requested_Date, response_Date);
        }
        
        public System.Threading.Tasks.Task<bool> UpdateQuotationAsync(int quotationId, string sName, string address, string email, string PName, int stock, string requested_Date, string response_Date) {
            return base.Channel.UpdateQuotationAsync(quotationId, sName, address, email, PName, stock, requested_Date, response_Date);
        }
    }
}
