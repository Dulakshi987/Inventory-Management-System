//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WebApplication5.Products {
    using System.Data;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="Products.ProductSoap")]
    public interface ProductSoap {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/AddProduct", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        bool AddProduct(int productId, string pName, int pNo, string catagory, int pPrice, int sPrice, int inventory);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/AddProduct", ReplyAction="*")]
        System.Threading.Tasks.Task<bool> AddProductAsync(int productId, string pName, int pNo, string catagory, int pPrice, int sPrice, int inventory);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ViewAllProducts", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Data.DataTable ViewAllProducts();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ViewAllProducts", ReplyAction="*")]
        System.Threading.Tasks.Task<System.Data.DataTable> ViewAllProductsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/UpdateProduct", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        bool UpdateProduct(int productId, string pName, int pNo, string category, int pPrice, int sPrice, int inventory);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/UpdateProduct", ReplyAction="*")]
        System.Threading.Tasks.Task<bool> UpdateProductAsync(int productId, string pName, int pNo, string category, int pPrice, int sPrice, int inventory);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/DeleteProduct", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        bool DeleteProduct(int productId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/DeleteProduct", ReplyAction="*")]
        System.Threading.Tasks.Task<bool> DeleteProductAsync(int productId);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ProductSoapChannel : WebApplication5.Products.ProductSoap, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ProductSoapClient : System.ServiceModel.ClientBase<WebApplication5.Products.ProductSoap>, WebApplication5.Products.ProductSoap {
        
        public ProductSoapClient() {
        }
        
        public ProductSoapClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ProductSoapClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ProductSoapClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ProductSoapClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public bool AddProduct(int productId, string pName, int pNo, string catagory, int pPrice, int sPrice, int inventory) {
            return base.Channel.AddProduct(productId, pName, pNo, catagory, pPrice, sPrice, inventory);
        }
        
        public System.Threading.Tasks.Task<bool> AddProductAsync(int productId, string pName, int pNo, string catagory, int pPrice, int sPrice, int inventory) {
            return base.Channel.AddProductAsync(productId, pName, pNo, catagory, pPrice, sPrice, inventory);
        }
        
        public System.Data.DataTable ViewAllProducts() {
            return base.Channel.ViewAllProducts();
        }
        
        public System.Threading.Tasks.Task<System.Data.DataTable> ViewAllProductsAsync() {
            return base.Channel.ViewAllProductsAsync();
        }
        
        public bool UpdateProduct(int productId, string pName, int pNo, string category, int pPrice, int sPrice, int inventory) {
            return base.Channel.UpdateProduct(productId, pName, pNo, category, pPrice, sPrice, inventory);
        }
        
        public System.Threading.Tasks.Task<bool> UpdateProductAsync(int productId, string pName, int pNo, string category, int pPrice, int sPrice, int inventory) {
            return base.Channel.UpdateProductAsync(productId, pName, pNo, category, pPrice, sPrice, inventory);
        }
        
        public bool DeleteProduct(int productId) {
            return base.Channel.DeleteProduct(productId);
        }
        
        public System.Threading.Tasks.Task<bool> DeleteProductAsync(int productId) {
            return base.Channel.DeleteProductAsync(productId);
        }
    }
}
